---
const navLinks = [
  { href: "./", label: "Home" },
  { href: "#code-projects", label: "Code Projects" },
  { href: "#wordpress-projects", label: "WordPress Projects" }
];

// Importar el componente ThemeToggle
import ThemeToggle from "./ThemeToggle.astro";
---

<nav
  class="bg-white dark:bg-gray-800 px-4 sm:px-8 md:px-16 py-3 sm:py-4 md:py-5 fixed top-0 w-full z-10 shadow-md transition-colors duration-300"
>
  <div class="container flex justify-between items-center mx-auto">
    <!-- Menú de Navegación -->
    <div class="flex items-center">
      <button
        id="menu-btn"
        class="text-gray-800 dark:text-white focus:outline-none sm:hidden mr-4"
      >
        <div class="space-y-1">
          <span class="block h-0.5 w-6 bg-gray-800 dark:bg-white"></span>
          <span class="block h-0.5 w-6 bg-gray-800 dark:bg-white"></span>
          <span class="block h-0.5 w-6 bg-gray-800 dark:bg-white"></span>
        </div>
      </button>
    </div>

    <ul
      id="menu"
      class="hidden sm:flex flex-col sm:flex-row space-y-2 sm:space-y-0 sm:space-x-5 items-center"
    >
      {
        navLinks.map((link) => (
          <li>
            <a href={link.href} class="text-gray-800 dark:text-white hover:text-gray-600 dark:hover:text-gray-400">
              {link.label}
            </a>
          </li>
        ))
      }
    </ul>

    <!-- Redes Sociales y Theme Toggle -->
    <div class="flex space-x-3 sm:space-x-5 items-center">
      <a href="https://github.com/DavidUmiri">
        <img
          src="/portfolio-dauc/images/github.webp"
          alt="GitHub David Umiri"
          class="w-5 h-5 sm:w-6 sm:h-6"
        />
      </a>
      <a href="https://linkedin.com/in/davidumiri">
        <img
          src="/portfolio-dauc/images/linkedin.webp"
          alt="LinkedIn David Umiri"
          class="w-5 h-5 sm:w-6 sm:h-6"
        />
      </a>
      <!-- Añadir el ThemeToggle aquí -->
      <div class="inline-block">
        <ThemeToggle />
      </div>
    </div>
  </div>

  <!-- Menú desplegable para móviles -->
  <div
    id="mobile-menu"
    class="fixed top-0 left-0 w-2/3 h-full bg-white dark:bg-gray-800 z-20 transition-all transform -translate-x-full sm:hidden duration-300 ease-in-out opacity-0 shadow-lg"
  >
    <div class="flex justify-between items-center p-4">
      <div class="text-gray-800 dark:text-white text-xl">Menu</div>
      <button id="close-btn" class="text-gray-800 dark:text-white focus:outline-none">
        <svg
          class="w-5 h-5"
          fill="none"
          stroke="currentColor"
          viewBox="0 0 24 24"
          xmlns="http://www.w3.org/2000/svg"
        >
          <path
            stroke-linecap="round"
            stroke-linejoin="round"
            stroke-width="2"
            d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>
    <ul
      class="flex flex-col space-y-2 p-4 transition-all duration-300 ease-in-out opacity-0 translate-x-[-20px]"
    >
      {
        navLinks.map((link) => (
          <li>
            <a
              href={link.href}
              class="text-gray-800 dark:text-white hover:text-gray-600 dark:hover:text-gray-400 block px-4 py-2 menu-item"
            >
              {link.label}
            </a>
          </li>
        ))
      }
    </ul>
  </div>
</nav>

<script type="module">
  const menuBtn = document.getElementById("menu-btn");
  const closeBtn = document.getElementById("close-btn");
  const mobileMenu = document.getElementById("mobile-menu");
  const menuItems = document.querySelectorAll(".menu-item");

  function closeMenu() {
    mobileMenu.classList.add("-translate-x-full", "opacity-0");
    mobileMenu.classList.remove("translate-x-0", "opacity-100");
    const menuList = mobileMenu.querySelector("ul");
    menuList.classList.add("opacity-0", "translate-x-[-20px]");
    menuList.classList.remove("opacity-100", "translate-x-0");
  }

  function openMenu() {
    mobileMenu.classList.remove("-translate-x-full", "opacity-0");
    mobileMenu.classList.add("translate-x-0", "opacity-100");
    const menuList = mobileMenu.querySelector("ul");
    setTimeout(() => {
      menuList.classList.remove("opacity-0", "translate-x-[-20px]");
      menuList.classList.add("opacity-100", "translate-x-0");
    }, 150);
  }

  menuBtn.addEventListener("click", () => {
    if (mobileMenu.classList.contains("-translate-x-full")) {
      openMenu();
    } else {
      closeMenu();
    }
  });

  closeBtn.addEventListener("click", closeMenu);

  window.addEventListener("click", (e) => {
    if (!mobileMenu.contains(e.target) && !menuBtn.contains(e.target)) {
      closeMenu();
    }
  });

  // Smooth scroll for menu items
  menuItems.forEach((item) => {
    item.addEventListener("click", (e) => {
      e.preventDefault();
      const href = item.getAttribute("href");

      if (href.startsWith("#")) {
        const element = document.querySelector(href);
        if (element) {
          element.scrollIntoView({ behavior: "smooth" });
        }
      } else {
        window.location.href = href;
      }

      setTimeout(closeMenu, 200);
    });
  });

  // Smooth scroll for navigation links
  document.querySelectorAll("nav a").forEach((link) => {
    link.addEventListener("click", (e) => {
      const href = link.getAttribute("href");

      if (href.startsWith("#")) {
        e.preventDefault();
        const element = document.querySelector(href);
        if (element) {
          element.scrollIntoView({ behavior: "smooth" });
        }
      }
    });
  });
</script>
